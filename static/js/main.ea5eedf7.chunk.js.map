{"version":3,"sources":["App.js","index.js"],"names":["require","config","App","useState","userCoordinates","setUserCoordinates","weatherData","setWeatherData","url","data","unsplash","setUnsplash","unsplashOrientation","setUnsplashOrientation","weatherIcon","setWeatherIcon","setLocationJsx","time","setTime","setDate","title","setTitle","timeConvert","setTimeConvert","quote","setQuote","weatherObject","five","eight","useEffect","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","long","longitude","console","log","Number","window","innerWidth","innerHeight","fetch","then","res","json","catch","err","process","urls","raw","weather","weatherId","id","toString","dayNight","split","join","slice","weatherIconFunction","timeNum","titleFunction","interval","setInterval","today","Date","minutes","getMinutes","hour","getHours","getMonth","getDate","afternoonTime","clearInterval","weatherLink","name","weatherJsx","main","href","target","rel","className","src","alt","temp","toFixed","description","unsplashJsx","links","html","location","titleBackColor","style","backgroundImage","backgroundColor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea5eedf7.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\nrequire('dotenv').config()\n\nfunction App() {\n  const [userCoordinates, setUserCoordinates] = useState({})\n  const [weatherData, setWeatherData] = useState({})\n  const [unsplash, setUnsplash] = useState({url: '', data: []})\n  const [unsplashOrientation, setUnsplashOrientation] = useState('')\n  const [weatherIcon, setWeatherIcon] = useState('')\n  const [locationJsx, setLocationJsx] = useState(false)\n  const [time, setTime] = useState('')\n  const [date, setDate] = useState('')\n  const [title, setTitle] = useState('')\n  const [timeConvert, setTimeConvert] = useState('')\n  const [quote, setQuote] = useState([])\n\n  const weatherObject = { 2: \"11\", 3: \"09\", 5: \"10\", 6: \"13\", 7: \"50\", 8: \"01\" }\n  const five = { 0: \"10\", 1: \"13\", 2: \"09\", 3: \"09\" }\n  const eight = { 1: \"02\", 2: \"03\", 3: \"04\", 4: \"04\" }\n\n  const weatherApiCall = () => {\n    fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${userCoordinates.lat}&lon=${userCoordinates.long}&appid=${process.env.REACT_APP_WEATHER_KEY}&units=imperial`)\n    .then(res => res.json())\n    .then(data => setWeatherData(data))\n  }\n\n  const unsplashApiCall = () => {\n    fetch(`https://api.unsplash.com/photos/random?client_id=${process.env.REACT_APP_UNSPLASH_KEY}&orientation=${unsplashOrientation}`)\n    .then(res => res.json())\n    .then(data => setUnsplash({url: data.urls.raw, data: data}))\n  }\n\n  const quoteApiCall = () => {\n    fetch('https://zenquotes.io/api/today')\n    .then(res => res.json())\n    .then(data => setQuote(data))\n    .catch((err) => console.log(err))\n  }\n\n  const setDimensions = () => {\n    if (Number(window.innerWidth > window.innerHeight)) {\n      setUnsplashOrientation('landscape')\n    } else {\n      setUnsplashOrientation('portrait')\n    };\n  }\n\n  const weatherIconFunction = () => { \n    if (((weatherData||{}).weather||[])[0]) {\n      let weatherId = weatherData.weather[0].id.toString()\n      let dayNight = 'd'\n      if (Number(time.split(':').join('')) > 1800 || Number(time.split(':').join('')) < 600){\n        dayNight = 'n'\n      }\n      if (weatherId.slice(0,1) === 5) {\n        setWeatherIcon(`http://openweathermap.org/img/wn/${five[weatherId.slice(1,2)]}${dayNight}@4x.png`)\n      } else if (weatherId.slice(0,1) === 8) {\n        setWeatherIcon(`http://openweathermap.org/img/wn/${eight[weatherId.slice(2,3)]}${dayNight}@4x.png`)\n      } else {\n        setWeatherIcon(`http://openweathermap.org/img/wn/${weatherObject[weatherId.slice(0,1)]}${dayNight}@4x.png`)\n      }\n    }\n  }\n\n  const titleFunction = () => {\n    let timeNum = Number(time.slice(0, 2))\n    console.log(timeNum)\n    if (timeNum >= 18 || timeNum < 5) {\n      setTitle('Good night')\n    } else if (timeNum >= 5 & timeNum < 12) {\n      setTitle('Good morning')\n    } else if (timeNum >= 12 & timeNum < 18) {\n      setTitle('Good afternoon')\n    }\n  }\n\n  useEffect(() => {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition(function(position) {\n        setUserCoordinates({lat: position.coords.latitude, long: position.coords.longitude})\n      });\n    } else {\n      console.log(\"Not Available\");\n    };\n    setDimensions()\n    quoteApiCall()\n  }, [])\n\n  useEffect(() => {\n    unsplashApiCall();\n  }, [unsplashOrientation])\n\n  useEffect(() => {\n    weatherApiCall()\n  }, [userCoordinates])\n\n  useEffect(() => {\n    weatherIconFunction()\n    setLocationJsx(true)\n  }, [weatherData])\n\n  useEffect(() => {\n    titleFunction()\n  }, [time])\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const today = new Date()\n      let minutes = ('0'+ (today.getMinutes())).slice(-2)\n      let hour = ('0'+ (today.getHours())).slice(-2)\n      setTime(hour + ':' + minutes);\n      setDate((today.getMonth()+1) + '-' + today.getDate());\n      if (Number(hour) > 12) {\n        let afternoonTime = ((Number(hour)-12).toString()) + ':' + minutes + ' PM'\n        console.log(afternoonTime)\n        setTimeConvert(afternoonTime)\n      } else if (Number(hour) === 12){\n        let noonTime = hour + ':' + minutes + ' PM'\n        setTimeConvert(noonTime)\n      } else {\n        let morningTime = hour + ':' + minutes + ' AM'\n        setTimeConvert(morningTime)\n      }\n    }, 1000)\n    return () => clearInterval(interval)\n  }, [])\n\n  const weatherLink = weatherData && `https://www.google.com/search?q=${weatherData.name}+weather`\n\n  const weatherJsx = (weatherData && weatherIcon && weatherData.main) &&\n  <a href={weatherLink} target='_blank' rel=\"noreferrer\" className='weatherMain'>\n    <div>\n        <img className='weatherIcon' src={weatherIcon} alt='weather_icon'/>\n    </div>\n    <div className='weatherDetails1'>\n      <h2 className='weatherTemp'>{weatherData.main.temp.toFixed()}Â°F</h2>\n      <h2>{weatherData.weather[0].description}</h2>\n    </div>\n  </a>\n\n  const unsplashJsx = (unsplash.data && unsplash.data.links) &&\n  <div className='quoteUnder'>\n    <a href={unsplash.data.links.html}>\n      {unsplash.data.location.name ? <h1>{unsplash.data.location.name}</h1> : <h1>Full picture here</h1>}\n    </a>\n  </div>\n\n  // console.log(userCoordinates)\n  console.log(weatherIcon)\n  console.log(weatherData)\n\n  const titleBackColor = (title === 'Good night') ? 'rgb(29, 38, 53)' : null\n\n  console.log(unsplash.data)\n  console.log(quote)\n\n  return (\n    <div style={{ backgroundImage: `url(${unsplash.url})` }} className=\"App\">\n      <div className='weatherJsxUpper'>\n        {weatherData.weather ? weatherJsx : <h1>Loading...</h1>}\n      </div>\n      <div className='titleUpper'>\n        {timeConvert ? <h1 className='titleTime'>{timeConvert}</h1> : <h1>Loading...</h1>}\n        {title ? <h1 style={{backgroundColor: titleBackColor}}className='titleText'>{title}</h1> : <h1>Loading...</h1>}\n      </div>\n      <div className='quoteUpper'>\n        {unsplashJsx}\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}