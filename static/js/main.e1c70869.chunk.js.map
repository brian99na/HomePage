{"version":3,"sources":["App.js","index.js"],"names":["require","config","App","useState","userCoordinates","setUserCoordinates","weatherData","setWeatherData","url","data","unsplash","setUnsplash","unsplashOrientation","setUnsplashOrientation","weatherIcon","setWeatherIcon","setLocationJsx","time","setTime","setDate","title","setTitle","timeConvert","setTimeConvert","setQuote","modal","setModal","site","name","modalValue","setModalValue","localStorageArr","setLocalStorageArr","showSettings","setShowSettings","weatherObject","five","eight","handleModal","modalChange","e","target","value","linkHover","children","classList","console","log","linkLeave","useEffect","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","long","longitude","Number","window","innerWidth","innerHeight","fetch","then","res","json","catch","err","document","JSON","parse","localStorage","getItem","process","urls","raw","weather","weatherId","id","toString","dayNight","split","join","slice","weatherIconFunction","timeNum","titleFunction","interval","setInterval","today","Date","minutes","getMinutes","hour","getHours","getMonth","getDate","afternoonTime","clearInterval","weatherLink","weatherJsx","main","href","rel","className","src","alt","temp","toFixed","description","unsplashJsx","links","html","location","modalJsx","onClick","onSubmit","preventDefault","prevData","linkObject","length","push","setItem","stringify","localDataCreate","onChange","placeholder","type","linkArrayJsx","map","item","index","siteIcon","onMouseEnter","onMouseLeave","titleBackColor","style","backgroundImage","backgroundColor","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e1c70869.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\nimport { AiOutlineConsoleSql, AiOutlinePlusSquare } from 'react-icons/ai';\nimport { RiSettings4Line } from 'react-icons/ri';\nrequire('dotenv').config();\n\nfunction App() {\n  const [userCoordinates, setUserCoordinates] = useState({})\n  const [weatherData, setWeatherData] = useState({})\n  const [unsplash, setUnsplash] = useState({url: '', data: []})\n  const [unsplashOrientation, setUnsplashOrientation] = useState('')\n  const [weatherIcon, setWeatherIcon] = useState('')\n  const [locationJsx, setLocationJsx] = useState(false)\n  const [time, setTime] = useState('')\n  const [date, setDate] = useState('')\n  const [title, setTitle] = useState('')\n  const [timeConvert, setTimeConvert] = useState('')\n  const [quote, setQuote] = useState([])\n  const [modal, setModal] = useState(false)\n  const [modalValue, setModalValue] = useState({site: '', name: ''})\n  const [localStorageArr, setLocalStorageArr] = useState([])\n  const [showSettings, setShowSettings] = useState(false)\n\n  const weatherObject = { 2: \"11\", 3: \"09\", 5: \"10\", 6: \"13\", 7: \"50\", 8: \"01\" }\n  const five = { 0: \"10\", 1: \"13\", 2: \"09\", 3: \"09\" }\n  const eight = { 1: \"02\", 2: \"03\", 3: \"04\", 4: \"04\" }\n\n\n  const weatherApiCall = () => {\n    fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${userCoordinates.lat}&lon=${userCoordinates.long}&appid=${process.env.REACT_APP_WEATHER_KEY}&units=imperial`)\n    .then(res => res.json())\n    .then(data => setWeatherData(data))\n  }\n\n  const unsplashApiCall = () => {\n    fetch(`https://api.unsplash.com/photos/random?client_id=${process.env.REACT_APP_UNSPLASH_KEY}&orientation=${unsplashOrientation}`)\n    .then(res => res.json())\n    .then(data => setUnsplash({url: data.urls.raw, data: data}))\n  }\n\n  const quoteApiCall = () => {\n    fetch('https://zenquotes.io/api/today')\n    .then(res => res.json())\n    .then(data => setQuote(data))\n    .catch((err) => console.log(err))\n  }\n\n  const setDimensions = () => {\n    if (Number(window.innerWidth > window.innerHeight)) {\n      setUnsplashOrientation('landscape')\n    } else {\n      setUnsplashOrientation('portrait')\n    };\n  }\n\n  const weatherIconFunction = () => { \n    if (((weatherData||{}).weather||[])[0]) {\n      let weatherId = weatherData.weather[0].id.toString()\n      let dayNight = 'd'\n      if (Number(time.split(':').join('')) > 1800 || Number(time.split(':').join('')) < 600){\n        dayNight = 'n'\n      }\n      if (weatherId.slice(0,1) === 5) {\n        setWeatherIcon(`http://openweathermap.org/img/wn/${five[weatherId.slice(1,2)]}${dayNight}@4x.png`)\n      } else if (weatherId.slice(0,1) === 8) {\n        setWeatherIcon(`http://openweathermap.org/img/wn/${eight[weatherId.slice(2,3)]}${dayNight}@4x.png`)\n      } else {\n        setWeatherIcon(`http://openweathermap.org/img/wn/${weatherObject[weatherId.slice(0,1)]}${dayNight}@4x.png`)\n      }\n    }\n  }\n\n  const titleFunction = () => {\n    let timeNum = Number(time.slice(0, 2))\n    if (timeNum >= 18 || timeNum < 5) {\n      setTitle('Good night')\n    } else if (timeNum >= 5 & timeNum < 12) {\n      setTitle('Good morning')\n    } else if (timeNum >= 12 & timeNum < 18) {\n      setTitle('Good afternoon')\n    }\n  }\n\n  const localDataCreate = () => {\n    let prevData = JSON.parse(localStorage.getItem('linkArr'));\n    if (prevData === null) {\n      prevData = []\n    }\n    let linkObject = {...modalValue}\n    if (prevData.length <= 5) {\n      prevData.push(linkObject)\n    }\n    setLocalStorageArr(prevData)\n    localStorage.setItem('linkArr', JSON.stringify(prevData))\n  }\n\n  const handleModal = () => {\n    setModal(!modal)\n  }\n\n  const handleModalSubmit = (e) => {\n    e.preventDefault();\n    localDataCreate();\n    setModal(!modal);\n  }\n\n  const modalChange = (e) => {\n    setModalValue({...modalValue, [e.target.name]: e.target.value})\n  }\n\n  const linkHover = (e) => {\n    setShowSettings(!showSettings)\n    if (e.target.children[2]) {\n      e.target.children[2].classList.value = 'linkSettings'\n      console.log(e.target.children[2].classList.value)\n    }\n  }\n\n  const linkLeave = (e) => {\n    setShowSettings(!showSettings)\n    if (e.target.children[2]) {\n      e.target.children[2].classList.value = 'invisible'\n      console.log(e.target.children[2].classList.value)\n    }\n  }\n\n  useEffect(() => {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition(function(position) {\n        setUserCoordinates({lat: position.coords.latitude, long: position.coords.longitude})\n      });\n    } else {\n      console.log(\"Not Available\");\n    };\n    setDimensions()\n    quoteApiCall()\n    document.title = \"Welcome!\"\n    setLocalStorageArr(JSON.parse(localStorage.getItem('linkArr')))\n  }, [])\n\n  useEffect(() => {\n    unsplashApiCall();\n  }, [unsplashOrientation])\n\n  useEffect(() => {\n    weatherApiCall()\n  }, [userCoordinates])\n\n  useEffect(() => {\n    weatherIconFunction()\n    setLocationJsx(true)\n  }, [weatherData])\n\n  useEffect(() => {\n    titleFunction()\n  }, [time])\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const today = new Date()\n      let minutes = ('0'+ (today.getMinutes())).slice(-2)\n      let hour = ('0'+ (today.getHours())).slice(-2)\n      setTime(hour + ':' + minutes);\n      setDate((today.getMonth()+1) + '-' + today.getDate());\n      if (Number(hour) > 12) {\n        let afternoonTime = ((Number(hour)-12).toString()) + ':' + minutes + ' PM'\n        console.log(afternoonTime)\n        setTimeConvert(afternoonTime)\n      } else if (Number(hour) === 12){\n        let noonTime = hour + ':' + minutes + ' PM'\n        setTimeConvert(noonTime)\n      } else {\n        let morningTime = hour + ':' + minutes + ' AM'\n        setTimeConvert(morningTime)\n      }\n    }, 1000)\n    return () => clearInterval(interval)\n  }, [])\n\n  const weatherLink = weatherData && `https://www.google.com/search?q=${weatherData.name}+weather`\n\n  const weatherJsx = (weatherData && weatherIcon && weatherData.main) &&\n  <a href={weatherLink} target='_blank' rel=\"noreferrer\" className='weatherMain'>\n    <div>\n        <img className='weatherIcon' src={weatherIcon} alt='weather_icon'/>\n    </div>\n    <div className='weatherDetails1'>\n      <h2 className='weatherTemp'>{weatherData.main.temp.toFixed()}°F</h2>\n      <h2>{weatherData.weather[0].description}</h2>\n    </div>\n  </a>\n\n  const unsplashJsx = (unsplash.data && unsplash.data.links) &&\n  <div className='quoteUnder'>\n    <a href={unsplash.data.links.html} target='_blank' rel=\"noreferrer\">\n      {unsplash.data.location.name ? <h1>{unsplash.data.location.name}</h1> : <h1>Full picture here</h1>}\n    </a>\n  </div>\n\n  const modalJsx = \n  <div className='modalUpper'>\n    <div onClick={handleModal} className='modal-overlay'></div>\n    <div className='modalMain'>\n      <form onSubmit={handleModalSubmit}>\n        <h1>Add a link to your favorite site</h1>\n        <input onChange={modalChange} value={modalValue.site} name='site' className='modalSiteInput' placeholder='ex. https://www.youtube.com/'/>\n        <h1>Shortcut name</h1>\n        <input onChange={modalChange} value={modalValue.name} name='name' className='modalNameInput' placeholder='ex. Google Docs'/>\n        <div className='buttonsDiv'>\n          <button type='submit'>Submit</button>\n          <button onClick={handleModal}>Cancel</button>\n        </div>\n      </form>\n    </div>\n  </div>\n\n  const linkArrayJsx = localStorageArr.map((item, index) => {\n    let siteIcon = `https://www.google.com/s2/favicons?sz=64&domain_url=${item.site}`\n    return(\n      <a onMouseEnter={linkHover} onMouseLeave={linkLeave} className='linksMain' key={item.name + index} href={item.site} target='_blank' rel='noreferrer'>\n        <img src={siteIcon} alt=''/>\n        <h1>{item.name}</h1>\n        <RiSettings4Line className='invisible'/>\n      </a>\n    )\n  })\n\n  const titleBackColor = (title === 'Good night') ? 'rgb(29, 38, 53)' : 'rgba(241, 218, 153)'\n\n  return (\n    <div style={{ backgroundImage: `url(${unsplash.url})` }} className=\"App\">\n      <div className='weatherJsxUpper'>\n        {weatherData.weather ? weatherJsx : <h1>Loading...</h1>}\n      </div>\n      <div className='titleUpper'>\n        {timeConvert ? <h1 className='titleTime'>{timeConvert}</h1> : <h1>Loading...</h1>}\n        {title ? <h1 style={{backgroundColor: titleBackColor}}className='titleText'>{title}</h1> : <h1>Loading...</h1>}\n      </div>\n      <div className='quoteUpper'>\n        {unsplashJsx}\n        <div className='siteDiv'>\n          {(linkArrayJsx.length <= 5) && <AiOutlinePlusSquare onClick={handleModal} className='modalAddBtn' />}\n          {linkArrayJsx}\n        </div>\n      </div>\n      {modal && modalJsx}\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}